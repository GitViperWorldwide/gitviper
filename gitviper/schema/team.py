# generated by datamodel-codegen:
#   filename:  team.json
#   timestamp: 2024-09-03T07:29:02+00:00

from __future__ import annotations

from enum import Enum
from pydantic import AnyUrl, AwareDatetime, BaseModel, Field
from typing import Optional

from gitviper.schema.organization import Organization


class Privacy(Enum):
    closed = "closed"
    secret = "secret"


class NotificationSetting(Enum):
    notifications_enabled = "notifications_enabled"
    notifications_disabled = "notifications_disabled"


class Parent(BaseModel):
    id: int = Field(..., description="Unique identifier of the team", examples=[1])
    node_id: str = Field(..., examples=["MDQ6VGVhbTE="])
    url: AnyUrl = Field(
        ...,
        description="URL for the team",
        examples=["https://api.github.com/organizations/1/team/1"],
    )
    members_url: str = Field(
        ..., examples=["https://api.github.com/organizations/1/team/1/members{/member}"]
    )
    name: str = Field(..., description="Name of the team", examples=["Justice League"])
    description: Optional[str] = Field(
        ..., description="Description of the team", examples=["A great team."]
    )
    permission: str = Field(
        ...,
        description="Permission that the team will have for its repositories",
        examples=["admin"],
    )
    privacy: Optional[str] = Field(
        None,
        description="The level of privacy this team should have",
        examples=["closed"],
    )
    notification_setting: Optional[str] = Field(
        None,
        description="The notification setting the team has set",
        examples=["notifications_enabled"],
    )
    html_url: AnyUrl = Field(..., examples=["https://github.com/orgs/rails/teams/core"])
    repositories_url: AnyUrl = Field(
        ..., examples=["https://api.github.com/organizations/1/team/1/repos"]
    )
    slug: str = Field(..., examples=["justice-league"])
    ldap_dn: Optional[str] = Field(
        None,
        description="Distinguished Name (DN) that team maps to within LDAP environment",
        examples=["uid=example,ou=users,dc=github,dc=com"],
    )


class Team(BaseModel):
    id: int = Field(..., description="Unique identifier of the team", examples=[42])
    node_id: str = Field(..., examples=["MDQ6VGVhbTE="])
    url: AnyUrl = Field(
        ...,
        description="URL for the team",
        examples=["https://api.github.com/organizations/1/team/1"],
    )
    html_url: AnyUrl = Field(..., examples=["https://github.com/orgs/rails/teams/core"])
    name: str = Field(..., description="Name of the team", examples=["Developers"])
    slug: str = Field(..., examples=["justice-league"])
    description: Optional[str] = Field(..., examples=["A great team."])
    privacy: Optional[Privacy] = Field(
        None,
        description="The level of privacy this team should have",
        examples=["closed"],
    )
    notification_setting: Optional[NotificationSetting] = Field(
        None,
        description="The notification setting the team has set",
        examples=["notifications_enabled"],
    )
    permission: str = Field(
        ...,
        description="Permission that the team will have for its repositories",
        examples=["push"],
    )
    members_url: str = Field(
        ..., examples=["https://api.github.com/organizations/1/team/1/members{/member}"]
    )
    repositories_url: AnyUrl = Field(
        ..., examples=["https://api.github.com/organizations/1/team/1/repos"]
    )
    parent: Optional[Parent] = None
    members_count: int = Field(..., examples=[3])
    repos_count: int = Field(..., examples=[10])
    created_at: AwareDatetime = Field(..., examples=["2017-07-14T16:53:42Z"])
    updated_at: AwareDatetime = Field(..., examples=["2017-08-17T12:37:15Z"])
    organization: Organization = Field(
        ..., description="Team Organization", title="Team Organization"
    )
    ldap_dn: Optional[str] = Field(
        None,
        description="Distinguished Name (DN) that team maps to within LDAP environment",
        examples=["uid=example,ou=users,dc=github,dc=com"],
    )
