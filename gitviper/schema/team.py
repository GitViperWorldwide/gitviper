# generated by datamodel-codegen:
#   filename:  team.json
#   timestamp: 2024-09-03T07:29:02+00:00

from __future__ import annotations

from enum import Enum
from typing import Optional

from pydantic import AnyUrl, AwareDatetime, BaseModel, EmailStr, Field


class Privacy(Enum):
    closed = 'closed'
    secret = 'secret'


class NotificationSetting(Enum):
    notifications_enabled = 'notifications_enabled'
    notifications_disabled = 'notifications_disabled'


class Parent(BaseModel):
    id: int = Field(..., description='Unique identifier of the team', examples=[1])
    node_id: str = Field(..., examples=['MDQ6VGVhbTE='])
    url: AnyUrl = Field(
        ...,
        description='URL for the team',
        examples=['https://api.github.com/organizations/1/team/1'],
    )
    members_url: str = Field(
        ..., examples=['https://api.github.com/organizations/1/team/1/members{/member}']
    )
    name: str = Field(..., description='Name of the team', examples=['Justice League'])
    description: Optional[str] = Field(
        ..., description='Description of the team', examples=['A great team.']
    )
    permission: str = Field(
        ...,
        description='Permission that the team will have for its repositories',
        examples=['admin'],
    )
    privacy: Optional[str] = Field(
        None,
        description='The level of privacy this team should have',
        examples=['closed'],
    )
    notification_setting: Optional[str] = Field(
        None,
        description='The notification setting the team has set',
        examples=['notifications_enabled'],
    )
    html_url: AnyUrl = Field(..., examples=['https://github.com/orgs/rails/teams/core'])
    repositories_url: AnyUrl = Field(
        ..., examples=['https://api.github.com/organizations/1/team/1/repos']
    )
    slug: str = Field(..., examples=['justice-league'])
    ldap_dn: Optional[str] = Field(
        None,
        description='Distinguished Name (DN) that team maps to within LDAP environment',
        examples=['uid=example,ou=users,dc=github,dc=com'],
    )


class Plan(BaseModel):
    name: str
    space: int
    private_repos: int
    filled_seats: Optional[int] = None
    seats: Optional[int] = None


class Organization(BaseModel):
    login: str = Field(..., examples=['github'])
    id: int = Field(..., examples=[1])
    node_id: str = Field(..., examples=['MDEyOk9yZ2FuaXphdGlvbjE='])
    url: AnyUrl = Field(..., examples=['https://api.github.com/orgs/github'])
    repos_url: AnyUrl = Field(
        ..., examples=['https://api.github.com/orgs/github/repos']
    )
    events_url: AnyUrl = Field(
        ..., examples=['https://api.github.com/orgs/github/events']
    )
    hooks_url: str = Field(..., examples=['https://api.github.com/orgs/github/hooks'])
    issues_url: str = Field(..., examples=['https://api.github.com/orgs/github/issues'])
    members_url: str = Field(
        ..., examples=['https://api.github.com/orgs/github/members{/member}']
    )
    public_members_url: str = Field(
        ..., examples=['https://api.github.com/orgs/github/public_members{/member}']
    )
    avatar_url: str = Field(
        ..., examples=['https://github.com/images/error/octocat_happy.gif']
    )
    description: Optional[str] = Field(..., examples=['A great organization'])
    name: Optional[str] = Field(None, examples=['github'])
    company: Optional[str] = Field(None, examples=['GitHub'])
    blog: Optional[AnyUrl] = Field(None, examples=['https://github.com/blog'])
    location: Optional[str] = Field(None, examples=['San Francisco'])
    email: Optional[EmailStr] = Field(None, examples=['octocat@github.com'])
    twitter_username: Optional[str] = Field(None, examples=['github'])
    is_verified: Optional[bool] = Field(None, examples=[True])
    has_organization_projects: bool = Field(..., examples=[True])
    has_repository_projects: bool = Field(..., examples=[True])
    public_repos: int = Field(..., examples=[2])
    public_gists: int = Field(..., examples=[1])
    followers: int = Field(..., examples=[20])
    following: int = Field(..., examples=[0])
    html_url: AnyUrl = Field(..., examples=['https://github.com/octocat'])
    created_at: AwareDatetime = Field(..., examples=['2008-01-14T04:33:35Z'])
    type: str = Field(..., examples=['Organization'])
    total_private_repos: Optional[int] = Field(None, examples=[100])
    owned_private_repos: Optional[int] = Field(None, examples=[100])
    private_gists: Optional[int] = Field(None, examples=[81])
    disk_usage: Optional[int] = Field(None, examples=[10000])
    collaborators: Optional[int] = Field(None, examples=[8])
    billing_email: Optional[EmailStr] = Field(None, examples=['org@example.com'])
    plan: Optional[Plan] = None
    default_repository_permission: Optional[str] = None
    members_can_create_repositories: Optional[bool] = Field(None, examples=[True])
    two_factor_requirement_enabled: Optional[bool] = Field(None, examples=[True])
    members_allowed_repository_creation_type: Optional[str] = Field(
        None, examples=['all']
    )
    members_can_create_public_repositories: Optional[bool] = Field(
        None, examples=[True]
    )
    members_can_create_private_repositories: Optional[bool] = Field(
        None, examples=[True]
    )
    members_can_create_internal_repositories: Optional[bool] = Field(
        None, examples=[True]
    )
    members_can_create_pages: Optional[bool] = Field(None, examples=[True])
    members_can_create_public_pages: Optional[bool] = Field(None, examples=[True])
    members_can_create_private_pages: Optional[bool] = Field(None, examples=[True])
    members_can_fork_private_repositories: Optional[bool] = Field(
        None, examples=[False]
    )
    web_commit_signoff_required: Optional[bool] = Field(None, examples=[False])
    updated_at: AwareDatetime
    archived_at: Optional[AwareDatetime] = None


class FullTeam(BaseModel):
    id: int = Field(..., description='Unique identifier of the team', examples=[42])
    node_id: str = Field(..., examples=['MDQ6VGVhbTE='])
    url: AnyUrl = Field(
        ...,
        description='URL for the team',
        examples=['https://api.github.com/organizations/1/team/1'],
    )
    html_url: AnyUrl = Field(..., examples=['https://github.com/orgs/rails/teams/core'])
    name: str = Field(..., description='Name of the team', examples=['Developers'])
    slug: str = Field(..., examples=['justice-league'])
    description: Optional[str] = Field(..., examples=['A great team.'])
    privacy: Optional[Privacy] = Field(
        None,
        description='The level of privacy this team should have',
        examples=['closed'],
    )
    notification_setting: Optional[NotificationSetting] = Field(
        None,
        description='The notification setting the team has set',
        examples=['notifications_enabled'],
    )
    permission: str = Field(
        ...,
        description='Permission that the team will have for its repositories',
        examples=['push'],
    )
    members_url: str = Field(
        ..., examples=['https://api.github.com/organizations/1/team/1/members{/member}']
    )
    repositories_url: AnyUrl = Field(
        ..., examples=['https://api.github.com/organizations/1/team/1/repos']
    )
    parent: Optional[Parent] = None
    members_count: int = Field(..., examples=[3])
    repos_count: int = Field(..., examples=[10])
    created_at: AwareDatetime = Field(..., examples=['2017-07-14T16:53:42Z'])
    updated_at: AwareDatetime = Field(..., examples=['2017-08-17T12:37:15Z'])
    organization: Organization = Field(
        ..., description='Team Organization', title='Team Organization'
    )
    ldap_dn: Optional[str] = Field(
        None,
        description='Distinguished Name (DN) that team maps to within LDAP environment',
        examples=['uid=example,ou=users,dc=github,dc=com'],
    )
