# generated by datamodel-codegen:
#   filename:  organization.json
#   timestamp: 2024-09-02T19:33:56+00:00

from __future__ import annotations

from typing import Optional

from pydantic import AnyUrl, AwareDatetime, BaseModel, EmailStr, Field


class Plan(BaseModel):
    name: str
    space: int
    private_repos: int
    filled_seats: Optional[int] = None
    seats: Optional[int] = None


class Organization(BaseModel):
    login: str = Field(..., examples=["github"])
    id: int = Field(..., examples=[1])
    node_id: str = Field(..., examples=["MDEyOk9yZ2FuaXphdGlvbjE="])
    url: AnyUrl = Field(..., examples=["https://api.github.com/orgs/github"])
    repos_url: AnyUrl = Field(
        ..., examples=["https://api.github.com/orgs/github/repos"]
    )
    events_url: AnyUrl = Field(
        ..., examples=["https://api.github.com/orgs/github/events"]
    )
    hooks_url: Optional[str] = Field(
        None, examples=["https://api.github.com/orgs/github/hooks"]
    )
    issues_url: Optional[str] = Field(
        None, examples=["https://api.github.com/orgs/github/issues"]
    )
    members_url: Optional[str] = Field(
        None, examples=["https://api.github.com/orgs/github/members{/member}"]
    )
    public_members_url: Optional[str] = Field(
        None, examples=["https://api.github.com/orgs/github/public_members{/member}"]
    )
    avatar_url: Optional[str] = Field(
        None, examples=["https://github.com/images/error/octocat_happy.gif"]
    )
    description: Optional[str] = Field(None, examples=["A great organization"])
    name: Optional[str] = Field(None, examples=["github"])
    company: Optional[str] = Field(None, examples=["GitHub"])
    blog: Optional[AnyUrl] = Field(None, examples=["https://github.com/blog"])
    location: Optional[str] = Field(None, examples=["San Francisco"])
    email: Optional[EmailStr] = Field(None, examples=["octocat@github.com"])
    twitter_username: Optional[str] = Field(None, examples=["github"])
    is_verified: Optional[bool] = Field(None, examples=[True])
    has_organization_projects: Optional[bool] = Field(None, examples=[True])
    has_repository_projects: Optional[bool] = Field(None, examples=[True])
    public_repos: Optional[int] = Field(None, examples=[2])
    public_gists: Optional[int] = Field(None, examples=[1])
    followers: Optional[int] = Field(None, examples=[20])
    following: Optional[int] = Field(None, examples=[0])
    html_url: AnyUrl = Field(..., examples=["https://github.com/octocat"])
    type: str = Field(..., examples=["Organization"])
    total_private_repos: Optional[int] = Field(None, examples=[100])
    owned_private_repos: Optional[int] = Field(None, examples=[100])
    private_gists: Optional[int] = Field(None, examples=[81])
    disk_usage: Optional[int] = Field(None, examples=[10000])
    collaborators: Optional[int] = Field(None, examples=[8])
    billing_email: Optional[EmailStr] = Field(None, examples=["org@example.com"])
    plan: Optional[Plan] = None
    default_repository_permission: Optional[str] = None
    members_can_create_repositories: Optional[bool] = Field(None, examples=[True])
    two_factor_requirement_enabled: Optional[bool] = Field(None, examples=[True])
    members_allowed_repository_creation_type: Optional[str] = Field(
        None, examples=["all"]
    )
    members_can_create_public_repositories: Optional[bool] = Field(
        None, examples=[True]
    )
    members_can_create_private_repositories: Optional[bool] = Field(
        None, examples=[True]
    )
    members_can_create_internal_repositories: Optional[bool] = Field(
        None, examples=[True]
    )
    members_can_create_pages: Optional[bool] = Field(None, examples=[True])
    members_can_create_public_pages: Optional[bool] = Field(None, examples=[True])
    members_can_create_private_pages: Optional[bool] = Field(None, examples=[True])
    members_can_fork_private_repositories: Optional[bool] = Field(
        None, examples=[False]
    )
    web_commit_signoff_required: Optional[bool] = Field(None, examples=[False])
    advanced_security_enabled_for_new_repositories: Optional[bool] = Field(
        None,
        description="**Deprecated.** Please use [code security configurations](https://docs.github.com/rest/code-security/configurations) instead.\n\nWhether GitHub Advanced Security is enabled for new repositories and repositories transferred to this organization.\n\nThis field is only visible to organization owners or members of a team with the security manager role.",
        examples=[False],
    )
    dependabot_alerts_enabled_for_new_repositories: Optional[bool] = Field(
        None,
        description="**Deprecated.** Please use [code security configurations](https://docs.github.com/rest/code-security/configurations) instead.\n\nWhether Dependabot alerts are automatically enabled for new repositories and repositories transferred to this organization.\n\nThis field is only visible to organization owners or members of a team with the security manager role.",
        examples=[False],
    )
    dependabot_security_updates_enabled_for_new_repositories: Optional[bool] = Field(
        None,
        description="**Deprecated.** Please use [code security configurations](https://docs.github.com/rest/code-security/configurations) instead.\n\nWhether Dependabot security updates are automatically enabled for new repositories and repositories transferred to this organization.\n\nThis field is only visible to organization owners or members of a team with the security manager role.",
        examples=[False],
    )
    dependency_graph_enabled_for_new_repositories: Optional[bool] = Field(
        None,
        description="**Deprecated.** Please use [code security configurations](https://docs.github.com/rest/code-security/configurations) instead.\n\nWhether dependency graph is automatically enabled for new repositories and repositories transferred to this organization.\n\nThis field is only visible to organization owners or members of a team with the security manager role.",
        examples=[False],
    )
    secret_scanning_enabled_for_new_repositories: Optional[bool] = Field(
        None,
        description="**Deprecated.** Please use [code security configurations](https://docs.github.com/rest/code-security/configurations) instead.\n\nWhether secret scanning is automatically enabled for new repositories and repositories transferred to this organization.\n\nThis field is only visible to organization owners or members of a team with the security manager role.",
        examples=[False],
    )
    secret_scanning_push_protection_enabled_for_new_repositories: Optional[bool] = (
        Field(
            None,
            description="**Deprecated.** Please use [code security configurations](https://docs.github.com/rest/code-security/configurations) instead.\n\nWhether secret scanning push protection is automatically enabled for new repositories and repositories transferred to this organization.\n\nThis field is only visible to organization owners or members of a team with the security manager role.",
            examples=[False],
        )
    )
    secret_scanning_push_protection_custom_link_enabled: Optional[bool] = Field(
        None,
        description="Whether a custom link is shown to contributors who are blocked from pushing a secret by push protection.",
        examples=[False],
    )
    secret_scanning_push_protection_custom_link: Optional[str] = Field(
        None,
        description="An optional URL string to display to contributors who are blocked from pushing a secret.",
        examples=["https://github.com/test-org/test-repo/blob/main/README.md"],
    )
    created_at: Optional[AwareDatetime] = Field(None, examples=["2008-01-14T04:33:35Z"])
    updated_at: Optional[AwareDatetime] = Field(None, examples=["2008-01-14T04:33:35Z"])
    archived_at: Optional[AwareDatetime] = None
